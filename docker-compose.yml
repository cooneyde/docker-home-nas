version: "3"
services:
  adguard:
    container_name: adguard
    image: adguard/adguardhome
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "853:853/tcp"
      - "9443:443/tcp"
      - "3000:3000/tcp"
      - "81:80"
    environment: 
      TZ: 'Europe/Dublin'
    volumes: 
      - /share/cachedev1/adguardhome/workdir:/opt/adguardhome/work
      - /share/cachedev1/adguardhome/confdir:/opt/adguardhome/conf
    restart: always
  # pihole:
  #   container_name: pihole
  #   image: pihole/pihole:latest
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     - "81:80/tcp"
  #     - "9443:443/tcp"
  #   environment:
  #     TZ: 'Europe/Dublin'
  #     # WEBPASSWORD: 'set a secure password here or it will be random'
  #   # Volumes store your data between container upgrades
  #   volumes:
  #     - '/share/cachedev1/pihole/etc/:/etc/pihole/'
  #     - '/share/cachedev1/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
  #   dns:
  #     - 127.0.0.1
  #     - 1.1.1.1
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost"]
  #     interval: 1m30s
  #     timeout: 10s
  #     retries: 3  
  watchtower:
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - deluge
      - jackett
      - ombi
      - plex
      - portainer
      - radarr
      - sonarr
    command: 
      - "watchtower --interval 21600"
  deluge:
    image: linuxserver/deluge
    container_name: deluge
    environment:
      - TZ=Europe/London
      - PUID=1000
      - PGID=1000
      - UMASK_SET=022 #optional
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - /share/cachedev1/deluge:/config
      - /share/Download:/downloads
    ports:
      - 8112:8112
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 10s
      retries: 3
  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /share/cachedev1/jackett:/config
      - /share/Download:/downloads
    ports:
      - 9117:9117
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9117"]
      interval: 1m30s
      timeout: 10s
      retries: 3
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - BASE_URL=/ombi #optional
    volumes:
      - /share/cachedev1/ombi:/config
    ports:
      - 3579:3579
    restart: always
    network_mode: host
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 10s
      retries: 3
  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - UMASK_SET=022 #optional
    volumes:
      - /share/cachedev1/plex:/config
      - /share/Multimedia/video/tv-shows:/tv
      - /share/Multimedia/video/Movies:/movies
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:32400/identity"]
      interval: 1m30s
      timeout: 10s
      retries: 3
  portainer:
    container_name: Portainer
    image: portainer/portainer
    restart: always
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /share/cachedev1/portainer:/data  
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - UMASK_SET=022 #optional
    volumes:
      - /share/cachedev1/radarr:/config
      - /share/Multimedia/video/Movies:/movies
      - /share/Download:/downloads
    ports:
      - 7878:7878
    network_mode: host
    restart: always
    depends_on:
      - jackett
      - deluge
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7878"]
      interval: 1m30s
      timeout: 10s
      retries: 3
  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - UMASK_SET=022 #optional
    ports:
      - 8989:8989
    volumes:
      - /share/cachedev1/sonarr:/config
      - /share/Multimedia/video/tv-shows:/tv
      - /share/Download:/downloads
    restart: always
    depends_on:
      - jackett
      - deluge
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8989"]
      interval: 1m30s
      timeout: 10s
      retries: 3
  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /share/cachedev1/heimdall:/config
    ports:
      - 8000:80
    restart: always